/**
 * –£—Ç–∏–ª—ñ—Ç–∞ –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ DOM-–µ–ª–µ–º–µ–Ω—Ç—ñ–≤
 */

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ DOM-–µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –≥—Ä–∏
function checkGameElements() {
    console.log('--- –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ DOM-–µ–ª–µ–º–µ–Ω—Ç—ñ–≤ ---');
    
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤
    const gameArea = document.querySelector('.game-area');
    console.log('Game Area:', gameArea ? 'OK' : 'Missing');
    
    const options = document.getElementById('options');
    console.log('Options container:', options ? 'OK' : 'Missing');
    console.log('Options children:', options?.children.length || 0);
    
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–Ω–æ–ø–æ–∫ —ñ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –∫–µ—Ä—É–≤–∞–Ω–Ω—è
    const playBtn = document.getElementById('play-btn');
    console.log('Play button:', playBtn ? 'OK' : 'Missing');
    
    const nextBtn = document.getElementById('next-btn');
    console.log('Next button:', nextBtn ? 'OK' : 'Missing');
    
    const speedBtns = document.querySelectorAll('.speed-btn');
    console.log('Speed buttons:', speedBtns.length);
    
    const levelBtns = document.querySelectorAll('.level-btn');
    console.log('Level buttons:', levelBtns.length);
    
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    const wordDisplay = document.getElementById('word-display');
    console.log('Word display:', wordDisplay ? 'OK' : 'Missing');
    console.log('Current word:', wordDisplay?.textContent);
    
    const taskType = document.getElementById('task-type');
    console.log('Task type:', taskType ? 'OK' : 'Missing');
    console.log('Current task:', taskType?.textContent);
    
    const feedback = document.getElementById('feedback');
    console.log('Feedback:', feedback ? 'OK' : 'Missing');
    
    console.log('--- –ö—ñ–Ω–µ—Ü—å –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ ---');
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –∑–º—ñ–Ω –≤ DOM
function monitorOptionsChanges() {
    const options = document.getElementById('options');
    if (!options) return;
    
    const observer = new MutationObserver((mutations) => {
        mutations.forEach((mutation) => {
            if (mutation.type === 'childList') {
                console.log('Options container –∑–º—ñ–Ω–µ–Ω–æ:', new Date().toISOString());
                console.log('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –æ–ø—Ü—ñ–π:', options.children.length);
            }
        });
    });
    
    observer.observe(options, { childList: true });
    console.log('–ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ Options container –∑–∞–ø—É—â–µ–Ω–æ');
}

// –í–∏–∫–æ–Ω—É—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –ø—ñ—Å–ª—è –ø–æ–≤–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è DOM
document.addEventListener('DOMContentLoaded', () => {
    console.log('DOM –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ');
    
    // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    const container = document.querySelector('.container');
    if (container) {
        const debugButton = document.createElement('button');
        debugButton.textContent = 'üîç –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞';
        debugButton.style.position = 'fixed';
        debugButton.style.bottom = '10px';
        debugButton.style.right = '10px';
        debugButton.style.zIndex = '1000';
        debugButton.style.padding = '5px 10px';
        debugButton.style.background = '#f39c12';
        debugButton.style.color = 'white';
        debugButton.style.border = 'none';
        debugButton.style.borderRadius = '5px';
        debugButton.style.cursor = 'pointer';
        
        debugButton.addEventListener('click', () => {
            checkGameElements();
        });
        
        container.appendChild(debugButton);
    }
    
    // –ó–∞–ø—É—Å–∫–∞—î–º–æ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –æ–ø—Ü—ñ–π
    setTimeout(() => {
        monitorOptionsChanges();
    }, 1000);
});

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ –∫–æ–Ω—Å–æ–ª—ñ
window.gameDebug = {
    checkGameElements,
    monitorOptionsChanges
}; 